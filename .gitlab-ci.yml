# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: git.elitsy.ru:5555/docker/python-tox-builder:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
# cache:
#   paths:
#     - .cache/pip
#     - .tox/

stages:
  - test
  - build
  - deploy

# before_script:
#   - python -V               # Print out python version for debugging
#   - pip -V

test:
  stage: test
  script:
    - tox -v -vv
  only:
    - master
    - tags
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_COMMIT_REF_NAME-reports"
    paths:
      - public
  coverage: '/^TOTAL\s+\d+\s+\d+\s+\d+\s+\d+\s+(\d+\%)$/'
  cache:
    paths:
      - .cache/pip
      - .tox/

build:
  stage: build
  script:
    - rm -rf dist
    - rm -rf build
    - rm -rf *.egg-info
    - python setup.py bdist_wheel
    - pip install dist/*
    - python -c 'import http_exceptions; print http_exceptions.get_version()'
  artifacts:
    paths:
      - dist/*.whl
  dependencies: []
  only:
    - tags
    - master
  cache:
    paths:
      - .cache/pip

deploy:
  stage: deploy
  script:
    - twine upload --repository-url $PYPI_PRIVATE_URL -u $PYPI_PRIVATE_USER -p $PYPI_PRIVATE_PASSWORD dist/*.whl 
    # - twine upload -r private ./dist/*.whl 
  dependencies:
    - build
  only:
    - tags

release:
  # релиз якобы сам создается при добавлении тэга с описанием
  # нужно приаттачить ссылку на релиз в Nexus, сами исходники не нужны
  # https://docs.gitlab.com/ee/api/releases/index.html
  # https://docs.gitlab.com/ee/api/releases/links.html
  stage: deploy
  script:
    - release.sh dist/*.whl
  dependencies:
    - build
  only:
    - tags

.pages:
  #script:
  #- pip install sphinx sphinx-rtd-theme
  #- cd doc ; make html
  #- mv build/html/ ../public/
  artifacts:
    paths:
      - public
  only:
    - master
